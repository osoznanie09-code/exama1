const cityInput = document.getElementById('city-input');
const searchBtn = document.getElementById('search-btn');
const locationBtn = document.getElementById('location-btn');
const weatherCard = document.getElementById('weather-card');
const errorMessage = document.getElementById('error-message');
const loading = document.getElementById('loading');
const themeToggle = document.getElementById('theme-toggle');
const themeIcon = document.getElementById('theme-icon');
const themeText = document.getElementById('theme-text');

const cityName = document.getElementById('city-name');
const temperature = document.getElementById('temperature');
const weatherDescription = document.getElementById('weather-description');
const weatherIcon = document.getElementById('weather-icon');
const feelsLike = document.getElementById('feels-like');
const humidity = document.getElementById('humidity');
const windSpeed = document.getElementById('wind-speed');
const pressure = document.getElementById('pressure');

const API_KEY='a5a8ac4a42a50521ca5a33d31e7babc4';

function initApp() {

    const savedTheme = localStorage.getItem("theme");
    if (savedTheme === "dark") {
        document.body.classList.add("dark-theme");
        themeIcon.textContent = "‚òÄÔ∏è";
        themeText.textContent = "–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞";
    }

    setupEventListeners();

    const lastCity = localStorage.getItem("lastCity");
    if (lastCity) {
        getWeatherByCity(lastCity);
    } else {
        getWeatherByLocation();
    }
}

function setupEventListeners() {
    searchBtn.addEventListener("click", handleSearch);
    cityInput.addEventListener("keypress", (e) => {
        if (e.key === "Enter") handleSearch();
    });
    locationBtn.addEventListener("click", getWeatherByLocation);
    themeToggle.addEventListener("click", toggleTheme);
}

function handleSearch() {
    const city = cityInput.value.trim();
    if (city) {
        getWeatherByCity(city);
        localStorage.setItem("lastCity", city); // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ—Ä–æ–¥
    } else {
        showError("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞");
    }
}

async function fetchWeather(url, customError = "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö") {
    showLoading();
    hideError();
    hideWeatherCard();
    try {
        const response = await fetch(url);
        if (!response.ok) {
            if (response.status === 404) throw new Error("–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω");
            throw new Error(customError);
        }
        const data = await response.json();
        displayWeather(data);

        // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–∑ API (—Ç–æ—á–Ω–æ–µ, —Å —É—á—ë—Ç–æ–º —Å—Ç—Ä–∞–Ω—ã –∏ —è–∑—ã–∫–∞)
        if (data.name) {
            localStorage.setItem("lastCity", data.name);
        }
    } catch (err) {
        showError(err.message || customError);
    } finally {
        hideLoading();
    }
}

function getWeatherByCity(city) {
    const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric&lang=ru`;
    fetchWeather(url);
}

function getWeatherByLocation() {
    if (!navigator.geolocation) {
        showError("–í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é");
        return;
    }
    showLoading();
    hideError();
    hideWeatherCard();
    navigator.geolocation.getCurrentPosition(
        (pos) => {
            const { latitude, longitude } = pos.coords;
            const url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric&lang=ru`;
            fetchWeather(url, "–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è");
        },
        (err) => {
            hideLoading();
            switch (err.code) {
                case err.PERMISSION_DENIED:
                    showError("–î–æ—Å—Ç—É–ø –∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –∑–∞–ø—Ä–µ—â—ë–Ω");
                    break;
                case err.POSITION_UNAVAILABLE:
                    showError("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞");
                    break;
                case err.TIMEOUT:
                    showError("–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –∏—Å—Ç–µ–∫–ª–æ");
                    break;
                default:
                    showError("–û—à–∏–±–∫–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏");
            }
        }
    );
}

function displayWeather(data) {
    cityName.textContent = `${data.name}, ${data.sys.country}`;
    temperature.textContent = `${Math.round(data.main.temp)}¬∞C`;
    weatherDescription.textContent = data.weather[0].description;
    weatherIcon.src = `https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`;
    feelsLike.textContent = `${Math.round(data.main.feels_like)}¬∞C`;
    humidity.textContent = `${data.main.humidity}%`;
    windSpeed.textContent = `${data.wind.speed} –º/—Å`;
    pressure.textContent = `${data.main.pressure} –≥–ü–∞`;
    showWeatherCard();
}

function toggleTheme() {
    document.body.classList.toggle("dark-theme");
    if (document.body.classList.contains("dark-theme")) {
        localStorage.setItem("theme", "dark");
        themeIcon.textContent = "‚òÄÔ∏è";
        themeText.textContent = "–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞";
    } else {
        localStorage.setItem("theme", "light");
        themeIcon.textContent = "üåô";
        themeText.textContent = "–¢—ë–º–Ω–∞—è —Ç–µ–º–∞";
    }
}

function showLoading() { loading.classList.add("active"); }
function hideLoading() { loading.classList.remove("active"); }
function showWeatherCard() { weatherCard.classList.add("active"); }
function hideWeatherCard() { weatherCard.classList.remove("active"); }
function showError(msg) {
    errorMessage.textContent = msg;
    errorMessage.classList.add("active");
}
function hideError() { errorMessage.classList.remove("active"); }

document.addEventListener("DOMContentLoaded", initApp);



